@page "/MediaDevices/GetUserMedia/ReturnsAudioMediaStream"
@using KristofferStrube.Blazor.WebIDL.Exceptions;
@inject IMediaDevicesService MediaDevicesService

<span data-testid="result">@result</span>

@code {
    [Parameter, SupplyParameterFromQuery(Name = "getAudio")]
    public bool GetAudio { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "getVideo")]
    public bool GetVideo { get; set; }


    private string result = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        try
        {
            var mediaDevices = await MediaDevicesService.GetMediaDevicesAsync();
            var mediaStream = await mediaDevices.GetUserMediaAsync(new() { Audio = GetAudio, Video = GetVideo });
            var audioTracks = await mediaStream.GetAudioTracksAsync();
            var videoTracks = await mediaStream.GetVideoTracksAsync();
            result = $"audioTracks: {audioTracks?.Length}, videoTracks: {videoTracks?.Length}";
        }
        catch (Exception e)
        {
            result = e.GetType().Name;
        }
        StateHasChanged();
    }
}
